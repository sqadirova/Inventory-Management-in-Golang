{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is an inventory management server.",
        "title": "Inventory Management API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/auth/refresh": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "RefreshToken refreshes the given token.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.RefreshTokenResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign in the user to system.",
                "parameters": [
                    {
                        "description": "Sign In Req",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignInReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.SignInResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/auth/sign-out": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign out the user from system.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.SignOutDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/inventories/{page}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Get all inventories.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search text (length min=3)",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/inventory.InventoryResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/inventory": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Create a new inventory.",
                "parameters": [
                    {
                        "description": "Inventory",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inventory.CreateInventoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/inventory.InventoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/inventory-categories": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory-category"
                ],
                "summary": "Get all inventory categories.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/inventoryCategory.InventoryCategoryDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/inventory-categories/{page}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory-category"
                ],
                "summary": "Get all inventory categories with pagination.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/inventoryCategory.InventoryCategoryResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/inventory-category": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory-category"
                ],
                "summary": "Create a new inventory category.",
                "parameters": [
                    {
                        "description": "Inventory Category",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inventoryCategory.InventoryCategoryReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/inventoryCategory.InventoryCategoryDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/inventory-category/{inventoryCategoryId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory-category"
                ],
                "summary": "Gets an inventory category by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inventory Category ID",
                        "name": "inventoryCategoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inventoryCategory.InventoryCategoryDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory-category"
                ],
                "summary": "Update the inventory category.",
                "parameters": [
                    {
                        "description": "Inventory Category",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inventoryCategory.InventoryCategoryReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Inventory Category ID",
                        "name": "inventoryCategoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inventoryCategory.InventoryCategoryDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory-category"
                ],
                "summary": "Create a new inventory category.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inventory Category ID",
                        "name": "inventoryCategoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/inventory/{inventoryId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Gets an inventory by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inventory ID",
                        "name": "inventoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inventory.InventoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Update the inventory.",
                "parameters": [
                    {
                        "description": "Inventory DTO",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inventory.UpdateInventoryRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Inventory ID",
                        "name": "inventoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/inventory.InventoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Delete inventory by id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Inventory ID",
                        "name": "inventoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/location": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Create a new location.",
                "parameters": [
                    {
                        "description": "Location",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/location.LocationDTOReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/location.LocationDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/location/{locationId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Update the location.",
                "parameters": [
                    {
                        "description": "Location DTO",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/location.LocationDTOReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "locationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/location.LocationDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Delete location by id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "locationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/logistic-center": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logistic-center"
                ],
                "summary": "Create a new logisticCenter.",
                "parameters": [
                    {
                        "description": "LogisticCenter",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/logisticCenter.LogisticCenterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/logisticCenter.LogisticCenterDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/logistic-center/{logisticCenterId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logistic-center"
                ],
                "summary": "Gets an logisticCenter by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "LogisticCenter ID",
                        "name": "logisticCenterId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/logisticCenter.LogisticCenterResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logistic-center"
                ],
                "summary": "Update the logisticCenter.",
                "parameters": [
                    {
                        "description": "LogisticCenter DTO",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/logisticCenter.LogisticCenterRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "LogisticCenter ID",
                        "name": "logisticCenterId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/logisticCenter.LogisticCenterResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logistic-center"
                ],
                "summary": "Create a new logisticCenter.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "LogisticCenter ID",
                        "name": "logisticCenterId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/logistic-centers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logistic-center"
                ],
                "summary": "Get all logisticCenters.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logisticCenter.LogisticCenterResponseDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/logistic-centers/{page}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logistic-center"
                ],
                "summary": "Get all logisticCenters with pagination.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/logisticCenter.LogisticCenterResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a user in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create a user.",
                "parameters": [
                    {
                        "description": "UserDTO",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.UserResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get user info from database by token in the request header",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user info by token in the request header.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserMeResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/user/roles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get all roles from roles table in database",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get all roles.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.RolesResp"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/user/roles/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get one role by id from database",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get one role.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.RolesResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a user in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateUserReq",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserResp"
                        }
                    },
                    "304": {
                        "description": "Not Modified",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get all users from users table in database",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get all users.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.UserResp"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/warehouse": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouse"
                ],
                "summary": "Create a new warehouse",
                "parameters": [
                    {
                        "description": "Warehouse",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/warehouse.WarehouseReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/warehouse.WarehouseRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        },
        "/warehouse/{warehouseId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouse"
                ],
                "summary": "Update the warehouse.",
                "parameters": [
                    {
                        "description": "Warehouse DTO",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/warehouse.WarehouseReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Warehouse ID",
                        "name": "warehouseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/warehouse.WarehouseRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouse"
                ],
                "summary": "Create a new warehouse",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Warehouse ID",
                        "name": "warehouseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "auth.SignInReq": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.SignInResp": {
            "type": "object",
            "required": [
                "access_token"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "auth.SignOutDTO": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "string"
                }
            }
        },
        "errors.Response": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "inventory.CreateInventoryRequest": {
            "type": "object",
            "required": [
                "actual_qty",
                "inventory_category_id",
                "inventory_name",
                "inventory_rfid",
                "location_id",
                "logistic_center_id",
                "warehouse_id"
            ],
            "properties": {
                "actual_qty": {
                    "type": "string"
                },
                "inventory_category_id": {
                    "type": "string"
                },
                "inventory_name": {
                    "type": "string"
                },
                "inventory_rfid": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "logistic_center_id": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "string"
                }
            }
        },
        "inventory.InventoryInfoDto": {
            "type": "object",
            "properties": {
                "actual_qty": {
                    "type": "string"
                },
                "inventory_id": {
                    "type": "string"
                },
                "inventory_name": {
                    "type": "string"
                },
                "inventory_rfid": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/inventory.LocationDto"
                },
                "logistic_center": {
                    "$ref": "#/definitions/logisticCenter.LogisticCenterRes"
                },
                "warehouse": {
                    "$ref": "#/definitions/inventory.WarehouseDto"
                }
            }
        },
        "inventory.InventoryResponse": {
            "type": "object",
            "properties": {
                "inventories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inventory.InventoryInfoDto"
                    }
                },
                "inventory_category": {
                    "$ref": "#/definitions/inventoryCategory.InventoryCategoryDTO"
                }
            }
        },
        "inventory.LocationDto": {
            "type": "object",
            "properties": {
                "location_id": {
                    "type": "string"
                },
                "location_name": {
                    "type": "string"
                }
            }
        },
        "inventory.UpdateInventoryRequest": {
            "type": "object",
            "required": [
                "actual_qty",
                "inventory_category_id",
                "inventory_name",
                "location_id",
                "logistic_center_id",
                "warehouse_id"
            ],
            "properties": {
                "actual_qty": {
                    "type": "string"
                },
                "inventory_category_id": {
                    "type": "string"
                },
                "inventory_name": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "logistic_center_id": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "string"
                }
            }
        },
        "inventory.WarehouseDto": {
            "type": "object",
            "properties": {
                "warehouse_id": {
                    "type": "string"
                },
                "warehouse_name": {
                    "type": "string"
                }
            }
        },
        "inventoryCategory.InventoryCategoryDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "inventory_category_name": {
                    "type": "string"
                }
            }
        },
        "inventoryCategory.InventoryCategoryReq": {
            "type": "object",
            "required": [
                "inventory_category_name"
            ],
            "properties": {
                "inventory_category_name": {
                    "type": "string"
                }
            }
        },
        "inventoryCategory.InventoryCategoryResponse": {
            "type": "object",
            "properties": {
                "inventory_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inventoryCategory.InventoryCategoryDTO"
                    }
                },
                "next_page": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "location.LocationDTO": {
            "type": "object",
            "properties": {
                "location_id": {
                    "type": "string"
                },
                "location_name": {
                    "type": "string"
                },
                "warehouse": {
                    "$ref": "#/definitions/location.WarehouseDto"
                }
            }
        },
        "location.LocationDTOReq": {
            "type": "object",
            "required": [
                "location_name",
                "warehouse_id"
            ],
            "properties": {
                "location_name": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "string"
                }
            }
        },
        "location.WarehouseDto": {
            "type": "object",
            "properties": {
                "warehouse_id": {
                    "type": "string"
                },
                "warehouse_name": {
                    "type": "string"
                }
            }
        },
        "logisticCenter.LGLocationInfoDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "location_name": {
                    "type": "string"
                }
            }
        },
        "logisticCenter.LGWarehouseInfoDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/logisticCenter.LGLocationInfoDTO"
                    }
                },
                "warehouse_name": {
                    "type": "string"
                }
            }
        },
        "logisticCenter.LogisticCenterDTO": {
            "type": "object",
            "required": [
                "logistic_center_name"
            ],
            "properties": {
                "logistic_center_id": {
                    "type": "string"
                },
                "logistic_center_name": {
                    "type": "string"
                }
            }
        },
        "logisticCenter.LogisticCenterRequest": {
            "type": "object",
            "required": [
                "logistic_center_name"
            ],
            "properties": {
                "logistic_center_name": {
                    "type": "string"
                }
            }
        },
        "logisticCenter.LogisticCenterRes": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "logistic_center_name": {
                    "type": "string"
                }
            }
        },
        "logisticCenter.LogisticCenterResponseDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "logistic_center_name": {
                    "type": "string"
                },
                "warehouses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/logisticCenter.LGWarehouseInfoDTO"
                    }
                }
            }
        },
        "user.RolesResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "role_type": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserReq": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "user.UserDTO": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.UserMeResp": {
            "type": "object",
            "properties": {
                "firstname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/user.RolesResp"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.UserResp": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "firstname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/user.RolesResp"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "warehouse.LogisticCenterDto": {
            "type": "object",
            "properties": {
                "logistic_center_id": {
                    "type": "string"
                },
                "logistic_center_name": {
                    "type": "string"
                }
            }
        },
        "warehouse.WarehouseReq": {
            "type": "object",
            "required": [
                "logistic_center_id",
                "warehouse_name"
            ],
            "properties": {
                "logistic_center_id": {
                    "type": "string"
                },
                "warehouse_name": {
                    "type": "string"
                }
            }
        },
        "warehouse.WarehouseRes": {
            "type": "object",
            "properties": {
                "logistic_centers": {
                    "$ref": "#/definitions/warehouse.LogisticCenterDto"
                },
                "warehouse_id": {
                    "type": "string"
                },
                "warehouse_name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}